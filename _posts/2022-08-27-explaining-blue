Explaining Blue

Programming is a niche topic, and I can't express how niche it is to try to program a processor inside an FPGA as a hobby. 
It's one of those things you have to oversimplify as "I just do text programs in my computer" when someone asks you about your hobbies unless both parties are willing to have a 4 hour lecture on boolean logic, computer architecture and basic programming. I don't have much friends that know about programming, this makes it rather difficult to talk with them about how excited I am for certain stuff within this field.
However, I'm always trying to come up with oversimplified analogies to try and compare what I like to do with things that they
know about, like comparing a logic gate with a statement about buying milk only if there's bread, or maintaining complex big scale 
programming projects to maintaining a car. That's why, for this post, I'm going to give a shot at explaining a bit of 
computer architecture and the Blue processor through images, lego blocks, motion and whatever analogy I can use to paint a physical 
simplified view of what I understand from these topics.

What's a computer?

The first thing I want to tackle is what I understand as a computer. For a lot of us a computer is a black box that makes
things happen on the screen, we know it connects to the internet, we know that we can attach a bunch of accesories to it and we know
that some weird terminology like RAM, Gigabytes, processors and CPU are often used when talking about computers., but what is
this all about?
In order to make sense of computers, we have to go simple, there are simpler examples of computers that we can talk about other than those
gargantuous RGB demons of maximum gaming performance experience that we call gaming PCs.

Now, personal computers have some tiny chips inside that we call processors, or Central Computer Units (CPUs). We can think of them
as the brains of our computers. The reality is a bit more complex than that, but we'll focus on these pieces of hardware for now. 
As you can imagine, processors nowadays are much more complex than how they were in the 80s, and processors from personal computers
are also way more complex than the processors inside your smartwatch, webcam, xbox control, etc. In fact, processors that were
created in the 80s are still being used for some of these small devices that don't require much complexity as a personal computer.
We'll focus on a fictional processor from the 80s that with some improvements could work as a personal computer from some decades ago. This
computer or processor, is called Blue and was created by Caxton C. Foster in his book "Computer Architecture".

Blue is a very simple and old machine, that makes it more appealing since it's going back in time and wonder ourselves with
how far technology has come and how a lot of the same principles are still being used more than 40 years later.
In layman's terms, a computer is a machine that can be instructed to perform calculations, almost like a calculator but instead of pressing
buttons you have to write a list of buttons need to be pressed each time. These instructions are what we call computer programs and we make 
them because we're too lazy to make complex calculations ourselves, plus, they're faster and less error prone than us. You could think of it 
as a factory, it would be really time consuming and tedious to make each item by hand, so we thought of a way to make machines do 
the hard work for us, an then we built upon it.

Blue

So how is Blue made? Blue is made of several parts, just like a human body. There's our brain that makes decisions and there's our eyes and ears that
send information to our brain, and we also have hands that let us manipulate physical things around us. Instead of these parts, Blue has a control unit
to make decisions, a bunch of "cables" to send data to the control unit